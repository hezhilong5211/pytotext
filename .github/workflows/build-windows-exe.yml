name: Build Windows EXE

on:
  # 手动触发
  workflow_dispatch:
  # 或者在push到main分支时自动触发
  # push:
  #   branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout代码
      uses: actions/checkout@v4
    
    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: 安装Playwright浏览器
      run: |
        python -m playwright install chromium
      shell: cmd
    
    - name: 查看Playwright浏览器路径
      run: |
        Get-ChildItem "$env:USERPROFILE\AppData\Local\ms-playwright" -Recurse | Where-Object {$_.Name -like "*chromium*"} | Select-Object FullName
      shell: powershell
    
    - name: 打包EXE（包含浏览器）
      run: |
        echo "开始打包，将包含Playwright Chromium浏览器"
        python -c "import os, glob; print('Chromium paths:'); [print(p) for p in glob.glob(os.path.expanduser('~/AppData/Local/ms-playwright/chromium-*'))]"
        pyinstaller build_exe.spec --clean --log-level DEBUG
      shell: cmd
      continue-on-error: false
    
    - name: 检查打包结果
      run: |
        echo "=== 检查dist目录 ==="
        if (Test-Path dist) {
          Get-ChildItem dist -Recurse | Format-Table Name, Length -AutoSize
        } else {
          echo "错误: dist目录不存在！"
        }
        echo ""
        echo "=== 检查当前目录所有文件 ==="
        Get-ChildItem . -Recurse -File | Where-Object {$_.Extension -eq ".exe"} | Format-Table FullName, Length -AutoSize
      shell: powershell
    
    - name: 上传EXE文件
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: 链接提取工具-Windows
        path: |
          dist/*.exe
          dist/**/链接提取工具.exe
        retention-days: 30
        if-no-files-found: warn
    
    - name: 创建Release（可选）
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

